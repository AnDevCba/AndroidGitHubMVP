apply plugin: 'com.android.application'
apply from: "../dependencies.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.andevcba.githubmvp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            resValue "string", "app_name", "GitHubMVP Mock"
        }
        prod {
            resValue "string", "app_name", "GitHubMVP Prod"
        }
    }

    // Remove mockRelease build variant as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // App dependencies
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:retrofit-mock:$rootProject.ext.retrofitVersion"
    compile "com.brandongogetap:stickyheaders:$rootProject.ext.stickyHeadersVersion"
    compile "de.hdodenhof:circleimageview:$rootProject.ext.circleImageVersion"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    annotationProcessor  "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    provided "javax.annotation:jsr250-api:$rootProject.ext.javaxAnnotationVersion"

    // Unit Testing dependencies
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Android Testing Support Library's dependencies
    androidTestCompile "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.supportLibraryTestVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.supportLibraryTestVersion"

    // UI Testing dependencies
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile "com.jayway.android.robotium:robotium-solo:$rootProject.ext.robotiumVersion"

}
